2612c2616
<   subroutine writeGridInfo(nGVecsGlobal, nKPoints, maxNumPWsGlobal, gKIndexGlobal, gVecMillerIndicesGlobal, nGkLessECutGlobal, maxGIndexGlobal, exportDir)
---
>   subroutine writeGridInfo(nSpins, nGVecsGlobal, nKPoints, maxNumPWsGlobal, gKIndexGlobal, gVecMillerIndicesGlobal, nGkLessECutGlobal, maxGIndexGlobal, exportDir)
2625a2630,2631
>     integer, intent(in) :: nSpins
>       !! Number of spins
2654c2660
<     integer :: ik, ig, igk
---
>     integer :: ik, ig, igk, isp
2676,2680c2682,2686
<     
<       do ik = 1, nKPoints
<         !! * For each k-point, write out the miller indices
<         !!   resulting in \(G+k\) vectors less than the energy
<         !!   cutoff in a `grid.ik` file
---
>       do isp = 1, nSpins
>         do ik = 1, nKPoints
>           !! * For each k-point, write out the miller indices
>           !!   resulting in \(G+k\) vectors less than the energy
>           !!   cutoff in a `grid.ik` file
2682,2685c2688,2691
<         call int2str(ik, indexC)
<         open(72, file=trim(exportDir)//"/grid."//trim(indexC))
<         write(72, '("# Wave function G-vectors grid")')
<         write(72, '("# G-vector index, G-vector(1:3) miller indices. Format: ''(4i10)''")')
---
>           call int2str(ik+(isp-1)*nKpoints, indexC)
>           open(72, file=trim(exportDir)//"/grid."//trim(indexC))
>           write(72, '("# Wave function G-vectors grid")')
>           write(72, '("# G-vector index, G-vector(1:3) miller indices. Format: ''(4i10)''")')
2687,2690c2693,2696
<         do igk = 1, nGkLessECutGlobal(ik)
<           write(72, '(4i10)') gKIndexGlobal(igk,ik), gVecMillerIndicesGlobal(1:3,gKIndexGlobal(igk,ik))
<           flush(72)
<         enddo
---
>           do igk = 1, nGkLessECutGlobal(ik)
>             write(72, '(4i10)') gKIndexGlobal(igk,ik), gVecMillerIndicesGlobal(1:3,gKIndexGlobal(igk,ik))
>             flush(72)
>           enddo
2692c2698
<         close(72)
---
>           close(72)
2693a2700
>         enddo
2883c2890
<     real(kind=dp), intent(in) :: bandOccupation(nSpins, nBands,nKPoints)
---
>     real(kind=dp), intent(in) :: bandOccupation(nBands,nSpins*nKPoints)
2895a2903,2904
>     integer :: ispin
>       !! Spin index
2910c2919,2923
<           call int2str(ik+(isp-1)*nKPoints, indexC)
---
>           !ispin = isk(ik)
>           !ispin = 1
>             !! @todo Figure out if spin needs to be incorporated for eigenvalues @endtodo
>       
>           call int2str(ik+(isp-1)*nKpoints, indexC)
2918c2931
<             write(72, '(2ES24.15E3)') real(eigenE(isp,ik,ib))*ryToHartree, bandOccupation(isp,ib,ik)
---
>             write(72, '(2ES24.15E3)') real(eigenE(isp,ik,ib))*ryToHartree, bandOccupation(ib,ik+(isp-1)*nKpoints)
2926d2938
< 
